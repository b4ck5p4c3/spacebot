# coding: utf-8

"""
    RE: Swynca

    B4CKSP4CE member/money management system

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.member_transaction_dto import MemberTransactionDTO

class TestMemberTransactionDTO(unittest.TestCase):
    """MemberTransactionDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MemberTransactionDTO:
        """Test MemberTransactionDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MemberTransactionDTO`
        """
        model = MemberTransactionDTO()
        if include_optional:
            return MemberTransactionDTO(
                id = '',
                type = 'deposit',
                amount = '',
                comment = '',
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                source = 'magic',
                target = 'magic',
                actor = openapi_client.models.member_dto.MemberDTO(
                    id = '', 
                    name = '', 
                    email = '', 
                    username = '', 
                    status = 'active', 
                    balance = '', 
                    joined_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    telegram_metadata = openapi_client.models.telegram_metadata_dto.TelegramMetadataDTO(
                        telegram_id = '', 
                        telegram_name = '', ), 
                    github_metadata = openapi_client.models.git_hub_metadata_dto.GitHubMetadataDTO(
                        github_id = '', 
                        github_username = '', ), ),
                subject = openapi_client.models.member_dto.MemberDTO(
                    id = '', 
                    name = '', 
                    email = '', 
                    username = '', 
                    status = 'active', 
                    balance = '', 
                    joined_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    telegram_metadata = openapi_client.models.telegram_metadata_dto.TelegramMetadataDTO(
                        telegram_id = '', 
                        telegram_name = '', ), 
                    github_metadata = openapi_client.models.git_hub_metadata_dto.GitHubMetadataDTO(
                        github_id = '', 
                        github_username = '', ), ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return MemberTransactionDTO(
                id = '',
                type = 'deposit',
                amount = '',
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                actor = openapi_client.models.member_dto.MemberDTO(
                    id = '', 
                    name = '', 
                    email = '', 
                    username = '', 
                    status = 'active', 
                    balance = '', 
                    joined_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    telegram_metadata = openapi_client.models.telegram_metadata_dto.TelegramMetadataDTO(
                        telegram_id = '', 
                        telegram_name = '', ), 
                    github_metadata = openapi_client.models.git_hub_metadata_dto.GitHubMetadataDTO(
                        github_id = '', 
                        github_username = '', ), ),
                subject = openapi_client.models.member_dto.MemberDTO(
                    id = '', 
                    name = '', 
                    email = '', 
                    username = '', 
                    status = 'active', 
                    balance = '', 
                    joined_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    telegram_metadata = openapi_client.models.telegram_metadata_dto.TelegramMetadataDTO(
                        telegram_id = '', 
                        telegram_name = '', ), 
                    github_metadata = openapi_client.models.git_hub_metadata_dto.GitHubMetadataDTO(
                        github_id = '', 
                        github_username = '', ), ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testMemberTransactionDTO(self):
        """Test MemberTransactionDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
