openapi: 3.0.0
info:
  title: swynca mvp api for tg bot
  version: 1.0.0
paths:
  /api/tg-accounting/transactions/{userId}:
    get:
      security:
        - bearerAuth: []
      summary: Transaction log for resident
      operationId: transactionLog
      tags:
        - transactions
      parameters:
        - name: limit
          in: query
          description: Record limit
          required: false
          schema:
            type: integer
            default: 100
        - name: offset
          in: query
          description: Record offset
          required: false
          schema:
            type: integer
            default: 0
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      responses:
        '200':
          description: Success request
          headers:
            x-next:
              description: Success request
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/tg-accounting/residents/debt:
    get:
      security:
        - bearerAuth: []
      summary: Get residents list
      operationId: listResidents
      tags:
        - residents
      parameters:
        - name: limit
          in: query
          description: Record limit
          required: false
          schema:
            type: integer
            default: 100
        - name: offset
          in: query
          description: Record offset
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Success request
          headers:
            x-next:
              description: Success request
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Resident"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  responses:
      UnauthorizedError:
        description: Access token is missing or invalid
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Transaction:
      required:
        - id
        - datetime
        - value
      properties:
        id:
          type: integer
          format: integer
        datetime:
          type: string
        comment:
          type: string
        value:
          type: integer
    Resident:
      required:
        - id
        - username
      properties:
        id:
          type: integer
          format: integer
        username:
          type: string
        debt:
          type: integer
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message